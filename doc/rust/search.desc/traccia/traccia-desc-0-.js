searchState.loadedDescShard("traccia", 0, "A lightweight, flexible logging framework for Rust …\nHook that is called after a log message is written. This …\nThe logger has been initialized more than once.\nHook that is called before a log message is written.\nBlack color (ANSI code 30 - bg: 40)\nBlue color (ANSI code 34 - bg: 44)\nBright black color (ANSI code 90 - bg: 100)\nBright blue color (ANSI code 94 - bg: 104)\nBright cyan color (ANSI code 96 - bg: 106)\nBright green color (ANSI code 92 - bg: 102)\nBright magenta color (ANSI code 95 - bg: 105)\nBright red color (ANSI code 91 - bg: 101)\nBright white color (ANSI code 97 - bg: 107)\nBright yellow color (ANSI code 93 - bg: 103)\nANSI color codes for terminal output.\nTrait for applying colors to strings.\nConfiguration for initializing a logger.\nStandard console output target.\nConsole output target\nCustom target identifier This can be used for custom …\nCyan color (ANSI code 36 - bg: 46)\nDetailed information useful for debugging\nDefault color (ANSI code 39)\nDefault log message formatter.\nError events, Could still allow the application to …\nFatal error events that lead to application termination\nFile output target.\nFile output target\nFile open mode for writing log messages.\nDefines a log message formatter.\nGreen color (ANSI code 32 - bg: 42)\nRepresents a hook that can be set to trigger at specific …\nRGB color with 8-bit values for red, green, and blue …\nGeneral information about application progress\nGeneric wrapper over io::Error\nLogging severity levels in ascending order of importance.\nCore trait that defines the logging behavior.\nMagenta color (ANSI code 35 - bg: 45)\nThe logger requires to be initialized but it isn’t\nOutput destination for console log messages.\nFailed to convert <code>LogLevel</code> to something else or vice-versa\nThe mutex is poisoned (i.e. <code>File</code> targets) Or the <code>HOOKS</code> …\nRGB color with 8-bit values for red, green, and blue …\nRepresents a single log record with all relevant metadata.\nRed color (ANSI code 31 - bg: 41)\nStandard error (stderr)\nStandard output (stdout)\nDefines an output destination for log messages.\nRepresents the id of the target where the log message is …\nVery detailed information for debugging specific issues\nPotentially harmful situations\nWhite color (ANSI code 37 - bg: 47)\nYellow color (ANSI code 33 - bg: 43)\nAbort any ongoing logging operations and cleanup resources.\nReturns the ANSI escape code for the color.\nApplies a background color to the string.\nApplies a background color to the string.\nMakes the content of the string blink.\nMakes the content of the string blink.\nApplies bold style to the string.\nApplies bold style to the string.\nApplies a color to the string.\nApplies a color to the string.\nLogs a message at the DEBUG level.\nCreates a default configuration with <code>Info</code> log level.\nReturns the level string with appropriate color formatting.\nCreates a default configuration with the specified log …\nDims the color of the string.\nDims the color of the string.\nDetermines if a message with the given log level should be …\nLogs a message at the ERROR level.\nLogs a message at the FATAL level.\nOptional source code file where the log was generated.\nReturns a custom filter level for the target. If the …\nReturns a custom filter level for the target. If the …\nReturns the custom filter level for the console target. If …\nReturns the custom filter level for the file target. If …\nBuilder method to set the custom filter level for this …\nSets a custom filter level for the file target. If the …\nBuilder method to set the custom output for a specific log …\nFormats the log level as a string.\nFormats a log record into a string.\nFormats a log record using the default format.\nOptional formatter for customizing log message appearance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHides the content of the string with the background color.\nHides the content of the string with the background color.\nReturns the target ID for the target. This is used to …\nReturns the target ID for the target. This is used to …\nReturns the target ID for the console target. This is used …\nReturns the target ID for the file target. This is used to …\nLogs a message at the INFO level.\nInitializes the global logger with the specified minimum …\nInitializes the global logger with default settings.\nInitializes the global logger with a custom configuration.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApplies italic style to the string.\nApplies italic style to the string.\nThe minimum log level that will be processed.\nThe severity level of the log message.\nOptional line number in the source code where the log was …\nProcess and output a log record.\nMacro for logging messages at a specific level.\nRetrieves the global logger instance.\nThe actual log message content.\nOptional module path where the log was generated.\nCreates a new console target\nCreates a new file target.\nBuilder method to set the custom output for the console. …\nReverses the foreground and background colors of the …\nReverses the foreground and background colors of the …\nSets a hook to be called at the specified point in the …\nStrikes through the content of the string.\nStrikes through the content of the string.\nThe target component or category for the log message.\nList of targets where log messages will be sent.\nThe thread ID where the log was generated.\nLogs a message at the TRACE level.\nUnderlines the string.\nUnderlines the string.\nLogs a message at the WARN level.\nWrites a formatted log message to the target.\nWrites the formatted log message to the console.\nWrites the formatted log message to the file.")